/*
 * Copyright (c) 2020. Open JumpCO
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without
 * limitation the rights to use, copy, modify, merge, publish, distribute,
 * sublicense, and/or sell copies of the Software, and to permit
 * persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

plugins {
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.15.0'
    id 'maven-publish'
    id 'idea'
    id 'groovy'
    id 'java'
    id 'signing'
    id 'org.ysb33r.gradletest' version '3.0.0-alpha.1'
}

wrapper {
    gradleVersion = '7.1.1'
}

group = 'io.jumpco.open'

if (project.findProperty('buildVersion') == 'LOCAL_SNAPSHOT') {
    version = 'LOCAL_SNAPSHOT'
} else {
    version = '1.4.1'
}

targetCompatibility = JavaVersion.VERSION_1_8
sourceCompatibility = JavaVersion.VERSION_1_8

jar {
    manifest {
        attributes([
                'Manifest-Version'      : '1.0',
                'Implementation-Version': project.version,
                'Build-Tag'             : buildVersion
        ])
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly gradleApi()
    implementation "com.amazonaws:aws-java-sdk-s3:$awsSdkVersion"
    implementation 'commons-io:commons-io:2.8.0'

    testCompileOnly localGroovy()
    testImplementation 'junit:junit:4.13'
    testImplementation 'org.assertj:assertj-core:3.6.2'
    testCompileOnly gradleTestKit()
    testImplementation 'org.spockframework:spock-core:2.0-groovy-3.0'
    gradleTest 'org.spockframework:spock-core:2.0-groovy-3.0'
    gradleTest 'org.assertj:assertj-core:3.6.2'
    gradleTest 'junit:junit:4.13'
    gradleTest "com.amazonaws:aws-java-sdk-s3:$awsSdkVersion"
    gradleTest 'commons-io:commons-io:2.8.0'
}

gradlePlugin {
    plugins {
        s3Plugin {
            id = 'io.jumpco.open.gradle.s3'
            implementationClass = 'io.jumpco.open.gradle.s3.S3Plugin'
        }
    }
}

pluginBundle {
    website = 'https://open.jumpco.io/projects/s3-plugin.html'
    vcsUrl = 'https://github.com/open-jumpco/s3-plugin'
    plugins {
        s3Plugin {
            displayName = 'S3 Gradle plugin'
            description = 'S3 Gradle plugin supporting upload and download'
            tags = ['s3', 'gradle', 'plugin', 'aws']
            version = project.version
        }
    }
}


task sourcesJar(type: Jar) {
    from fileTree(dir: 'src/main/groovy')
    archiveClassifier = 'sources'
}

artifacts {
    archives jar
    archives sourcesJar
}

gradleTest {
    versions '7.1.1', '7.0.2'
    versions '6.8.3', '6.6.1', '6.5.1', '6.4.1', '6.3', '6.2.1', '6.1.1', '6.0.1'
    versions '5.4.1', '5.5.1', '5.6.4'

    beforeTest {
        println "  ${it.name}"
    }
}

